buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

apply from: 'gradle/teacon-forge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// definitions at gradle/teacon-forge.gradle
teacon {
    modId = 'resource_sync'
    modVersion = '0.2.0'
    modLicense = 'LGPL-2.1-or-later'
    modGitHubRepo = 'teaconmc/ResourceSync'
    modAuthors = ['3TUSK']
    modDescription = 'Preemptively keeps resource pack updated.'

    platform = 'forge-1.18.2-40.1.0'
    parchment = '2022.05.02'

    // uncomment these lines if you need
    modName = 'ResourceSync' // default to repo name
    // modGitHubBranch = 1.18-forge // for referring the license
    // modifyMemberAccess = true // for access transformer
    // useDataGeneration = true // for data generation
    publishTask = shadowJar // for shadow jar or other usages
    lazyTokens = ['minecraft_classpath': { project.configurations.shadow.asPath }] // for runtime tokens

    // use './gradlew -q printModMeta > src/main/resources/META-INF/mods.toml' to generate mod meta
}

configurations {
    compileClasspath.extendsFrom(shadow)
    runtimeClasspath.extendsFrom(shadow)
}

dependencies {
    shadow 'org.apache.httpcomponents:httpclient-cache:4.5.13'
}

shadowJar {
    archiveClassifier.set(null)
    configurations = [project.configurations.shadow]
    dependencies {
        exclude it.dependency('org.apache.httpcomponents:httpclient:.*')
        exclude it.dependency('org.apache.httpcomponents:httpcore:.*')
        exclude it.dependency('commons-logging:commons-logging:.*')
        exclude it.dependency('commons-codec:commons-codec:.*')
    }
    relocate 'org.apache.http.client.cache', 'org.teacon.sync.repackage.org.apache.http.client.cache'
    relocate 'org.apache.http.impl.client.cache', 'org.teacon.sync.repackage.org.apache.http.impl.client.cache'
}

jar { it.enabled false }

reobf {
    jar { it.enabled false }
}
